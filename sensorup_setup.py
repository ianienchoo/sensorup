import json, requests, time, datetime, pprint, base64

base64.b64encode('Hello World!')

# this is the URL for the dashboard provided by Sensor up
URL = "http://scratchpad.sensorup.com/OGCSensorThings/v1.0"

# this is the URL and details for the dashboard provided by CXA
# CXA_URL = "https://cxa2017-ws1.sensorup.com/v1.0"
# username = "main"
# password = "f09611ec-60f6-523b-8e74-96601912577b"
# credentials = base64.b64encode(username + ": " + password)

headers = {
	# The CXA dashboard requires you to POST with credentials
	# Uncomment the line below ONLY if using the CXA board
	# "Authorization": "Basic " + credentials,
	"content-type": "application/json"
}





# STEP 1: Create a Thing on Sensorup
# representing your Raspberry Pi
thing = {
	"name": "maxelitica",
	"description": "tralala",
	"properties": {
		"test": "this is a prop"
	}
}

# the 'requests' module allows you to make HTTP GET and POST using Python
r = requests.post(URL + "/Things", 
		data=json.dumps(thing), 
		headers=headers)

# json.loads() converts the http response (JSON) into a Python dictionary
data_thing = json.loads(r.text)
print("\nSTEP 1: 'Thing' created on Sensorup server")
pprint.pprint(data_thing)
# get the Thing ID assigned by the server here
thingID = data_thing['@iot.id']





# STEP 2: Create a location and get the coordinates from  http://geojson.io
location = {
	"name": "SMU",
	"description": "Singapore Management University",
	"encodingType": "application/vnd.geo+json",
	"location": {
		"type": "Point",
		"coordinates": [103.85003685951233, 1.2963833805430944]
	}
}

r = requests.post(URL + '/Things(' + str(thingID) + ")/Locations", 
		data=json.dumps(location), 
		headers=headers)
data_loc = json.loads(r.text)
print("\nSTEP 2: 'Location' created on Sensorup servers" )
pprint.pprint(data_loc)





# STEP 3: create a datastream for EACH sensor you have
datastream = {
	"name": "IR distance DataStream",
	"description": "lalala",
	# do not change the observationType property
	"observationType": "http://www.opengis.net/def/observationType/OGC-OM/2.0/OM_Measurement",
	# fill unitOfMeasurement using the corresponding information at 
	# http://www.qudt.org/qudt/owl/1.0.0/unit/Instances.html
	"unitOfMeasurement": {
		"name": "Irradiance",
		"symbol": "watt/cm^2",
		"definition": "http://www.qudt.org/qudt/owl/1.0.0/unit/Instances.html#Irradiance"
	},
	# fill ObservedProperty below using the information at 
	# http://www.qudt.org/qudt/owl/1.0.0/quantity/Instances.html
	"ObservedProperty": {
		"name": "Radiation Levels",
		"description": "The level of IR in the area",
		"definition": "http://www.qudt.org/qudt/owl/1.0.0/quantity/Instances.html#AtmosphericPressure"
	},
	# fill in all the properties using the webpage/wiki for the sensor you are using
	"Sensor": {
		"name": "Grove IR interruptor sensor",
		"description": "pressure sensor",
		"encodingType": "application/html",
		"metadata": "https://pythonhosted.org/sense-hat/api/#environmental-sensors"
	}
}

r = requests.post(URL + '/Things(' + str(thingID) + ')/Datastreams',
		data=json.dumps(datastream), 
		headers=headers)
data_sensor = json.loads(r.text)
print("\nSTEP 3:'Datastream' created on Sensorup servers" )
pprint.pprint(data_sensor)
# get the ID generated by the server for this sensor/datastream
datastreamID = data_sensor['@iot.id']





# STEP4: Posting observations from your sensor
# 
result = 1
observation = {
	"result" : result,
	"Datastream": {"@iot.id":datastreamID}
}

r = requests.post(URL + "/Observations", 
		data=json.dumps(observation), 
		headers=headers)
data_obs = json.loads(r.text)
print("\nSTEP 4: 'Observation' created on Sensorup servers" )
pprint.pprint(data_obs)



# STEP5: retrieve data from Sensorup
r = requests.get(URL + "/Datastreams(" + 
		str(datastreamID) + ")/Observations?" + 
		"$top=5" + "&" + 
		"$select=result,phenomenonTime")
data_query = json.loads(r.text)
print("\nSTEP 5: Using HTTP GET to retrieve data from Sensorup")

# view the dictionary data_query in the console. 
# this helps you figure out which key-value pair in the dict you need
pprint.pprint(data_query)

# most recent observation is the first entry in the 
# array data_query['value']
most_recent_observation = data_query['value'][0]